# -*- coding: utf-8 -*-
"""exercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gnz6_JqsbrbueK9O10qlOMD93irG3t1W
"""

import numpy as np
#constante
Lambda= 1 #Taxa de chegada
mu =10000/2000 # Taxa de servico
rho = Lambda/mu # Utilizacao do sistema
print(rho)
elemento_Fila = 0 # Numero de mensagens na fila inicialmente
elemento_servidor = 1 #Numero de mensagens no servico
K=0  # Primeira iteracao
t=0  # Tempo inicial
tc=t+np.random.exponential((1/Lambda)) # Tempo de chegada
tp=t+(1/mu) # Tempo de partida
t=min(tc,tp)
Tempo_chegada =[0]     # Armazena os tempos de chegadas das mensagens
Tempo_partida =[]      # Armazena  os tempos de partidas das mensagens
Tq=[]     # Armazena o tempo no medio que cada mensagem passa na fila

while t<pow(10,4.4):
    if tc<tp:  # chegada de uma nova mensagem
        Tempo_chegada=np.append(Tempo_chegada,t) # Armazena o tempo de chegada
        tc=t+np.random.exponential((1/Lambda))  #Gera un novo tempo de chegada e suma com t
        if elemento_servidor==1: # Se o servidor esta ocupado
            elemento_Fila=elemento_Fila+1  # coloca a mensagem na fila
        elif elemento_servidor==0: # Se el servidor estc desocupado?
            elemento_servidor=1  # Ocupa el servido
            tp=t+(1/mu) # Gera novo tempo de partida
    elif tc>tp: # Ocorre uma partida
        K=K+1
        Tempo_partida = np.append(Tempo_partida, t) #armazena o tempo da partida
        Tq = np.append(Tq, (Tempo_partida[K-1]-Tempo_chegada[K-1])) # calculo o tempo no sistema
        if elemento_Fila>0:
            elemento_Fila=elemento_Fila-1    # Decrementa um  pacote da fila
            tp=t+(1/mu) # Gera um novo tempo de partida
            elemento_servidor=1  # Ocupaa o servidor
        elif elemento_Fila==0:#se a fila esta vazia
            elemento_servidor=0 # Libera o servidor
            tp=np.infty #Tempo de partida e infinito
    t=min(tc,tp) # Atualiza o tempo para o proximo evento


Etq = np.mean(Tq)# calcula o tempo medio que uma mensagem passa na fila


print("o tempo médio que uma mensagem permanece no nó é: ", Etq )

import numpy as np
#distribuicao exponencial
Lambda= 1 # Taxa de chegada
mu =10000/2000 # Taxa de servico
elemento_Fila = 0 #numero de mensagens  na fila inicialmente
elemento_servidor = 1 # numero de mensagens no servico
K=0  # Primeira iteracao
t=0  # Tempo inicial
tc=t+np.random.exponential((1/Lambda)) # Tempo de chegada
tp=t+np.random.exponential((1/mu)) # Tempo de partida
t=min(tc,tp)
Tempo_chegada =[0]     # Armazena os tempos de chegadas das mensagens
Tempo_partida =[]      # Armazena os tempos de partidas das mensagens
Tq=[]     # Armazena o  tempo no medio que cada mensagem passa na fila

while t<pow(10,4):
    if tc<tp:  # chegada de uma nova mensagem
        Tempo_chegada=np.append(Tempo_chegada,t) # Armazena o tempo de chegada
        tc=t+np.random.exponential((1/Lambda))  #Gera un novo tempo de chegada e soma com t
        if elemento_servidor==1: # Se o servidor esta ocupado
            elemento_Fila=elemento_Fila+1  # coloca el elemento en fila
        elif elemento_servidor==0: # Se o servidor estc desocupado?
            elemento_servidor=1  # Ocupa o servidor
            tp=t+np.random.exponential((1/mu)) # Gero nuevo tiempo de partida
    elif tc>tp: #  partida de uma mensagem
        K=K+1
        Tempo_partida = np.append(Tempo_partida, t) #armazena o tempo da partida
        Tq = np.append(Tq, (Tempo_partida[K-1]-Tempo_chegada[K-1])) # calcula o tempo no sistema
        if elemento_Fila>0:
            elemento_Fila=elemento_Fila-1    # Decrementa uma mensagem da fila
            tp=t+np.random.exponential((1/mu)) # Gero um novo tempo de partida
            elemento_servidor=1  # Ocupa o servidor
        elif elemento_Fila==0: # Se a fila esta vazia
            elemento_servidor=0 # Libera o servidor
            tp=np.infty # Tempo de partdida e infinito
    t=min(tc,tp) # Atualiza o tempo para o proximo evento

Ets=1/mu
Etq = np.mean(Tq) # Calcula o tempo medio que uma mensagem passa na fila



print("o tempo médio que uma mensagem permanece no nó é: ", Etq )