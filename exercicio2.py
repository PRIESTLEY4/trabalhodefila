# -*- coding: utf-8 -*-
"""exercicio2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rISYUltYTjThfVEBX3PFAkN-GjCao4k-
"""

import numpy as np

Lambda= 40 #Taxa de chegada media dos pacotes por unidade de tempo
mu =500000/5000 # Taxa de servico media
elemento_Fila = 0 #quantidade de pacote na fila inicialmente
elemento_servidor = 1 #quantidade de pacote no servico
K=0  # Primeira iteracao ,contador
t=0  # Tempo inicial
tc=t+np.random.exponential((1/Lambda)) # Tempo de chegada
tp=t+np.random.exponential((1/mu)) ## Tempo de partida
t=min(tc,tp)
Tempo_chegada =[0]     # Armazena os tempos de chegadas dos pacotes
Tempo_partida =[]      # Armazena os tempos de partidas dos pacotes
Tq=[]     # tempo no medio que um pacote passa na fila

while t<pow(10,3):
    if tc<tp:  #  chegada de um novo pacote
        Tempo_chegada=np.append(Tempo_chegada,t) # Armazena o tempo de chegada
        tc=t+np.random.exponential((1/Lambda))  #Gera un novo tempo de chegada e soma com t
        if elemento_servidor==1: # Se o servidor esta ocupado
            elemento_Fila=elemento_Fila+1  # coloca o pacote na  fila
        elif elemento_servidor==0: # Se o servidor esta desocupado?
            elemento_servidor=1  # Ocupa o servido
            tp=t+np.random.exponential((1/mu)) # Gera novo tempo de partida
    elif tc>tp: # partida de um pacote
        K=K+1
        Tempo_partida = np.append(Tempo_partida, t) #armazena o tempo da partida
        Tq = np.append(Tq, (Tempo_partida[K-1]-Tempo_chegada[K-1])) # calculo o tempo no sistema
        if elemento_Fila>0:
            elemento_Fila=elemento_Fila-1    # Decrementa um  pacote da fila
            tp=t+np.random.exponential((1/mu)) # Gera um novo tempo de partida
            elemento_servidor=1  # Ocupa o servidor
        elif elemento_Fila==0: # se a fila esta cazia
            elemento_servidor=0 # Libera o servidor
            tp=np.infty # Tempo de partida e infinito
    t=min(tc,tp) # Atualiza o tempo para o proximo evento

Ets=1/mu # Tempo medio esperado no sistema
Etq = np.mean(Tq) # Tempo medio esperado na fila
Eq=Lambda*Etq # Numero medio esperado de pacotes no sistema
Etw=Etq-Ets # Tempo medio esperado de espera na fila
Ew=Lambda*Etw # Numero medio esperado de pacotes esperando na fila



print("o tempo médio de permanência de um pacote no comutador é: ", Etq )
print("O tempo médio de espera na fila: ", Etw)